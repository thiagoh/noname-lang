def func_foo() {
  let aaaaaaaaa1 = 321;
  let aaaaaaaaa2 = 321;
  let aaaaaaaaa3 = 321;
  let aaaaaaaaa4 = 321;
  let aaaaaaaaa5 = 321;
  let aaaaaaaaa6 = 321;
};

def func_bar() {
  let cd1 = 3;
  func_foo();
  let cd2 = 3;
};
bar();

def baz() {
  let cd2 = 3;
  let my_returned_var = 3.14159;
  return my_returned_var;
};
baz();

def qux_int() {
  let var1 = 3;
  let var2 = 2;
  let my_returned_var = 3 + 2;
  return my_returned_var;
};
qux_int();

def qux_int_vars() {
  let var1 = 30;
  let var2 = 20;
  let my_returned_var = var1 + var2;
  return my_returned_var;
};
qux_int_vars();

// function that returns the value two
def ret_two() {
  let out = 2;
  return out;
};

let PI = 3.143; // 3.143 is the value of PI
let mult = ret_two() * PI;

// function that multiplies the result of ret_two() times PI
def call_func_that_calls_func() {
  let ab = ret_two() * PI;
  return ab;
}

call_func_that_calls_func(); 
def nha_hu() { let ab = 23; return ab; }
nha_hu();

def inner_func() {

  def f2() {
    return 2;
  }
  def f7() {
    return 7;
  }

  return f2() * f7();
}

inner_func();

def closure_func() {
  let phi = 1.6180339887;
  def get_phi() {
    return phi;
  }

  return get_phi() * 10;
}

closure_func(); // 27.18

def regular_func() {

  let ab = 3;
  #import nha2; // this generates error
  let cd = 4;
};

regular_func(); // function not found

#import "import_1.nn";
#import "math.nn";

// function defined inside math.nn
euler();

def sum(a, b) {
  return a + b;
};

sum(321, 123);