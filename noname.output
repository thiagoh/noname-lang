Terminals unused in grammar

   "line_break"
   "letter"
   "digit"
   "digits"
   "darrow"
   "else"
   "false"
   "if"
   "in"
   "loop"
   "then"
   "while"
   "break"
   "case"
   "new"
   "not"
   "true"
   "newline"
   "notnewline"
   "whitespace"
   "le"
   "nullch"
   "backslash"
   "star"
   "notstar"
   "leftparen"
   "notleftparen"
   "rightparen"
   "notrightparen"
   "line_comment"
   "start_comment"
   "end_comment"
   "quotes"
   "error"
   "declaration"
   "assignment"
   "optional_ret_stmt"
   "expression"
   "function_def"
   "stmt_list"
   "ne_stmt_list"
   "exp_list"
   "ne_exp_list"
   "arg_list"
   "ne_arg_list"
   "arg"
   "statement"


Grammar

    0 $accept: prog $end

    1 prog: %empty
    2     | prog stmt
    3     | error "stmt_sep"

    4 stmt_list: %empty
    5          | stmt
    6          | ne_stmt_list stmt

    7 ne_stmt_list: stmt
    8             | ne_stmt_list stmt

    9 stmt: declaration "stmt_sep"
   10     | assignment "stmt_sep"
   11     | function_def optional_stmt_sep
   12     | exp "stmt_sep"

   13 optional_stmt_sep: %empty
   14                  | "stmt_sep"

   15 @1: %empty

   16 $@2: %empty

   17 function_def: "def" "identifier" @1 '(' arg_list ')' $@2 '{' stmt_list optional_ret_stmt '}'

   18 optional_ret_stmt: %empty
   19                  | "return" exp "stmt_sep"

   20 assignment: "identifier" "assign" exp
   21           | "let" "identifier" "assign" exp

   22 declaration: "let" "identifier"

   23 exp: "identifier"
   24    | "string_constant"
   25    | "long"
   26    | "double"
   27    | exp "+" exp
   28    | exp "-" exp
   29    | exp "*" exp
   30    | exp "/" exp
   31    | "-" exp
   32    | exp "^" exp
   33    | '(' exp ')'
   34    | "identifier" '(' exp_list ')'

   35 arg_list: %empty
   36         | arg
   37         | ne_arg_list ',' arg

   38 ne_arg_list: arg
   39            | ne_arg_list ',' arg

   40 arg: "identifier"
   41    | "identifier" "assign" "double"
   42    | "identifier" "assign" "long"
   43    | "identifier" "assign" "string_constant"

   44 exp_list: %empty
   45         | exp "stmt_sep"
   46         | ne_exp_list exp "stmt_sep"

   47 ne_exp_list: exp "stmt_sep"
   48            | ne_exp_list exp "stmt_sep"


Terminals, with rules where they appear

$end (0) 0
'(' (40) 17 33 34
')' (41) 17 33 34
"*" (42) 29
"+" (43) 27
',' (44) 37 39
"-" (45) 28 31
"/" (47) 30
"^" (94) 32
'{' (123) 17
'}' (125) 17
error (256) 3
"line_break" (258)
"stmt_sep" (259) 3 9 10 12 14 19 45 46 47 48
"letter" (260)
"digit" (261)
"digits" (262)
"darrow" (263)
"else" (264)
"false" (265)
"if" (266)
"in" (267)
"let" (268) 21 22
"def" (269) 17
"loop" (270)
"then" (271)
"while" (272)
"break" (273)
"case" (274)
"new" (275)
"not" (276)
"return" (277) 19
"true" (278)
"newline" (279)
"notnewline" (280)
"whitespace" (281)
"le" (282)
"assign" (283) 20 21 41 42 43
"nullch" (284)
"backslash" (285)
"star" (286)
"notstar" (287)
"leftparen" (288)
"notleftparen" (289)
"rightparen" (290)
"notrightparen" (291)
"line_comment" (292)
"start_comment" (293)
"end_comment" (294)
"quotes" (295)
"error" (296)
"identifier" (297) 17 20 21 22 23 34 40 41 42 43
"string_constant" (298) 24 43
"double" (299) 26 41
"long" (300) 25 42
"declaration" (301)
"assignment" (302)
"optional_ret_stmt" (303)
"expression" (304)
"function_def" (305)
"stmt_list" (306)
"ne_stmt_list" (307)
"exp_list" (308)
"ne_exp_list" (309)
"arg_list" (310)
"ne_arg_list" (311)
"arg" (312)
"statement" (313)
NEG (314)


Nonterminals, with rules where they appear

$accept (70)
    on left: 0
prog (71)
    on left: 1 2 3, on right: 0 2
stmt_list (72)
    on left: 4 5 6, on right: 17
ne_stmt_list (73)
    on left: 7 8, on right: 6 8
stmt (74)
    on left: 9 10 11 12, on right: 2 5 6 7 8
optional_stmt_sep (75)
    on left: 13 14, on right: 11
function_def (76)
    on left: 17, on right: 11
@1 (77)
    on left: 15, on right: 17
$@2 (78)
    on left: 16, on right: 17
optional_ret_stmt (79)
    on left: 18 19, on right: 17
assignment (80)
    on left: 20 21, on right: 10
declaration (81)
    on left: 22, on right: 9
exp (82)
    on left: 23 24 25 26 27 28 29 30 31 32 33 34, on right: 12 19 20
    21 27 28 29 30 31 32 33 45 46 47 48
arg_list (83)
    on left: 35 36 37, on right: 17
ne_arg_list (84)
    on left: 38 39, on right: 37 39
arg (85)
    on left: 40 41 42 43, on right: 36 37 38 39
exp_list (86)
    on left: 44 45 46, on right: 34
ne_exp_list (87)
    on left: 47 48, on right: 46 48


State 0

    0 $accept: . prog $end

    error  shift, and go to state 1

    $end               reduce using rule 1 (prog)
    "let"              reduce using rule 1 (prog)
    "def"              reduce using rule 1 (prog)
    "-"                reduce using rule 1 (prog)
    "identifier"       reduce using rule 1 (prog)
    "string_constant"  reduce using rule 1 (prog)
    "double"           reduce using rule 1 (prog)
    "long"             reduce using rule 1 (prog)
    '('                reduce using rule 1 (prog)

    prog  go to state 2


State 1

    3 prog: error . "stmt_sep"

    "stmt_sep"  shift, and go to state 3


State 2

    0 $accept: prog . $end
    2 prog: prog . stmt

    $end               shift, and go to state 4
    "let"              shift, and go to state 5
    "def"              shift, and go to state 6
    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 8
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    stmt          go to state 13
    function_def  go to state 14
    assignment    go to state 15
    declaration   go to state 16
    exp           go to state 17


State 3

    3 prog: error "stmt_sep" .

    $default  reduce using rule 3 (prog)


State 4

    0 $accept: prog $end .

    $default  accept


State 5

   21 assignment: "let" . "identifier" "assign" exp
   22 declaration: "let" . "identifier"

    "identifier"  shift, and go to state 18


State 6

   17 function_def: "def" . "identifier" @1 '(' arg_list ')' $@2 '{' stmt_list optional_ret_stmt '}'

    "identifier"  shift, and go to state 19


State 7

   31 exp: "-" . exp

    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 20
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    exp  go to state 21


State 8

   20 assignment: "identifier" . "assign" exp
   23 exp: "identifier" .
   34    | "identifier" . '(' exp_list ')'

    "assign"  shift, and go to state 22
    '('       shift, and go to state 23

    $default  reduce using rule 23 (exp)


State 9

   24 exp: "string_constant" .

    $default  reduce using rule 24 (exp)


State 10

   26 exp: "double" .

    $default  reduce using rule 26 (exp)


State 11

   25 exp: "long" .

    $default  reduce using rule 25 (exp)


State 12

   33 exp: '(' . exp ')'

    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 20
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    exp  go to state 24


State 13

    2 prog: prog stmt .

    $default  reduce using rule 2 (prog)


State 14

   11 stmt: function_def . optional_stmt_sep

    "stmt_sep"  shift, and go to state 25

    $default  reduce using rule 13 (optional_stmt_sep)

    optional_stmt_sep  go to state 26


State 15

   10 stmt: assignment . "stmt_sep"

    "stmt_sep"  shift, and go to state 27


State 16

    9 stmt: declaration . "stmt_sep"

    "stmt_sep"  shift, and go to state 28


State 17

   12 stmt: exp . "stmt_sep"
   27 exp: exp . "+" exp
   28    | exp . "-" exp
   29    | exp . "*" exp
   30    | exp . "/" exp
   32    | exp . "^" exp

    "stmt_sep"  shift, and go to state 29
    "+"         shift, and go to state 30
    "-"         shift, and go to state 31
    "/"         shift, and go to state 32
    "*"         shift, and go to state 33
    "^"         shift, and go to state 34


State 18

   21 assignment: "let" "identifier" . "assign" exp
   22 declaration: "let" "identifier" .

    "assign"  shift, and go to state 35

    $default  reduce using rule 22 (declaration)


State 19

   17 function_def: "def" "identifier" . @1 '(' arg_list ')' $@2 '{' stmt_list optional_ret_stmt '}'

    $default  reduce using rule 15 (@1)

    @1  go to state 36


State 20

   23 exp: "identifier" .
   34    | "identifier" . '(' exp_list ')'

    '('  shift, and go to state 23

    $default  reduce using rule 23 (exp)


State 21

   27 exp: exp . "+" exp
   28    | exp . "-" exp
   29    | exp . "*" exp
   30    | exp . "/" exp
   31    | "-" exp .
   32    | exp . "^" exp

    $default  reduce using rule 31 (exp)


State 22

   20 assignment: "identifier" "assign" . exp

    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 20
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    exp  go to state 37


State 23

   34 exp: "identifier" '(' . exp_list ')'

    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 20
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    $default  reduce using rule 44 (exp_list)

    exp          go to state 38
    exp_list     go to state 39
    ne_exp_list  go to state 40


State 24

   27 exp: exp . "+" exp
   28    | exp . "-" exp
   29    | exp . "*" exp
   30    | exp . "/" exp
   32    | exp . "^" exp
   33    | '(' exp . ')'

    "+"  shift, and go to state 30
    "-"  shift, and go to state 31
    "/"  shift, and go to state 32
    "*"  shift, and go to state 33
    "^"  shift, and go to state 34
    ')'  shift, and go to state 41


State 25

   14 optional_stmt_sep: "stmt_sep" .

    $default  reduce using rule 14 (optional_stmt_sep)


State 26

   11 stmt: function_def optional_stmt_sep .

    $default  reduce using rule 11 (stmt)


State 27

   10 stmt: assignment "stmt_sep" .

    $default  reduce using rule 10 (stmt)


State 28

    9 stmt: declaration "stmt_sep" .

    $default  reduce using rule 9 (stmt)


State 29

   12 stmt: exp "stmt_sep" .

    $default  reduce using rule 12 (stmt)


State 30

   27 exp: exp "+" . exp

    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 20
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    exp  go to state 42


State 31

   28 exp: exp "-" . exp

    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 20
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    exp  go to state 43


State 32

   30 exp: exp "/" . exp

    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 20
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    exp  go to state 44


State 33

   29 exp: exp "*" . exp

    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 20
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    exp  go to state 45


State 34

   32 exp: exp "^" . exp

    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 20
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    exp  go to state 46


State 35

   21 assignment: "let" "identifier" "assign" . exp

    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 20
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    exp  go to state 47


State 36

   17 function_def: "def" "identifier" @1 . '(' arg_list ')' $@2 '{' stmt_list optional_ret_stmt '}'

    '('  shift, and go to state 48


State 37

   20 assignment: "identifier" "assign" exp .
   27 exp: exp . "+" exp
   28    | exp . "-" exp
   29    | exp . "*" exp
   30    | exp . "/" exp
   32    | exp . "^" exp

    "+"  shift, and go to state 30
    "-"  shift, and go to state 31
    "/"  shift, and go to state 32
    "*"  shift, and go to state 33
    "^"  shift, and go to state 34

    $default  reduce using rule 20 (assignment)


State 38

   27 exp: exp . "+" exp
   28    | exp . "-" exp
   29    | exp . "*" exp
   30    | exp . "/" exp
   32    | exp . "^" exp
   45 exp_list: exp . "stmt_sep"
   47 ne_exp_list: exp . "stmt_sep"

    "stmt_sep"  shift, and go to state 49
    "+"         shift, and go to state 30
    "-"         shift, and go to state 31
    "/"         shift, and go to state 32
    "*"         shift, and go to state 33
    "^"         shift, and go to state 34


State 39

   34 exp: "identifier" '(' exp_list . ')'

    ')'  shift, and go to state 50


State 40

   46 exp_list: ne_exp_list . exp "stmt_sep"
   48 ne_exp_list: ne_exp_list . exp "stmt_sep"

    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 20
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    exp  go to state 51


State 41

   33 exp: '(' exp ')' .

    $default  reduce using rule 33 (exp)


State 42

   27 exp: exp . "+" exp
   27    | exp "+" exp .
   28    | exp . "-" exp
   29    | exp . "*" exp
   30    | exp . "/" exp
   32    | exp . "^" exp

    "/"  shift, and go to state 32
    "*"  shift, and go to state 33
    "^"  shift, and go to state 34

    $default  reduce using rule 27 (exp)


State 43

   27 exp: exp . "+" exp
   28    | exp . "-" exp
   28    | exp "-" exp .
   29    | exp . "*" exp
   30    | exp . "/" exp
   32    | exp . "^" exp

    "/"  shift, and go to state 32
    "*"  shift, and go to state 33
    "^"  shift, and go to state 34

    $default  reduce using rule 28 (exp)


State 44

   27 exp: exp . "+" exp
   28    | exp . "-" exp
   29    | exp . "*" exp
   30    | exp . "/" exp
   30    | exp "/" exp .
   32    | exp . "^" exp

    "^"  shift, and go to state 34

    $default  reduce using rule 30 (exp)


State 45

   27 exp: exp . "+" exp
   28    | exp . "-" exp
   29    | exp . "*" exp
   29    | exp "*" exp .
   30    | exp . "/" exp
   32    | exp . "^" exp

    "^"  shift, and go to state 34

    $default  reduce using rule 29 (exp)


State 46

   27 exp: exp . "+" exp
   28    | exp . "-" exp
   29    | exp . "*" exp
   30    | exp . "/" exp
   32    | exp . "^" exp
   32    | exp "^" exp .

    "^"  shift, and go to state 34

    $default  reduce using rule 32 (exp)


State 47

   21 assignment: "let" "identifier" "assign" exp .
   27 exp: exp . "+" exp
   28    | exp . "-" exp
   29    | exp . "*" exp
   30    | exp . "/" exp
   32    | exp . "^" exp

    "+"  shift, and go to state 30
    "-"  shift, and go to state 31
    "/"  shift, and go to state 32
    "*"  shift, and go to state 33
    "^"  shift, and go to state 34

    $default  reduce using rule 21 (assignment)


State 48

   17 function_def: "def" "identifier" @1 '(' . arg_list ')' $@2 '{' stmt_list optional_ret_stmt '}'

    "identifier"  shift, and go to state 52

    $default  reduce using rule 35 (arg_list)

    arg_list     go to state 53
    ne_arg_list  go to state 54
    arg          go to state 55


State 49

   45 exp_list: exp "stmt_sep" .
   47 ne_exp_list: exp "stmt_sep" .

    ')'       reduce using rule 45 (exp_list)
    $default  reduce using rule 47 (ne_exp_list)


State 50

   34 exp: "identifier" '(' exp_list ')' .

    $default  reduce using rule 34 (exp)


State 51

   27 exp: exp . "+" exp
   28    | exp . "-" exp
   29    | exp . "*" exp
   30    | exp . "/" exp
   32    | exp . "^" exp
   46 exp_list: ne_exp_list exp . "stmt_sep"
   48 ne_exp_list: ne_exp_list exp . "stmt_sep"

    "stmt_sep"  shift, and go to state 56
    "+"         shift, and go to state 30
    "-"         shift, and go to state 31
    "/"         shift, and go to state 32
    "*"         shift, and go to state 33
    "^"         shift, and go to state 34


State 52

   40 arg: "identifier" .
   41    | "identifier" . "assign" "double"
   42    | "identifier" . "assign" "long"
   43    | "identifier" . "assign" "string_constant"

    "assign"  shift, and go to state 57

    $default  reduce using rule 40 (arg)


State 53

   17 function_def: "def" "identifier" @1 '(' arg_list . ')' $@2 '{' stmt_list optional_ret_stmt '}'

    ')'  shift, and go to state 58


State 54

   37 arg_list: ne_arg_list . ',' arg
   39 ne_arg_list: ne_arg_list . ',' arg

    ','  shift, and go to state 59


State 55

   36 arg_list: arg .
   38 ne_arg_list: arg .

    ','       reduce using rule 38 (ne_arg_list)
    $default  reduce using rule 36 (arg_list)


State 56

   46 exp_list: ne_exp_list exp "stmt_sep" .
   48 ne_exp_list: ne_exp_list exp "stmt_sep" .

    ')'       reduce using rule 46 (exp_list)
    $default  reduce using rule 48 (ne_exp_list)


State 57

   41 arg: "identifier" "assign" . "double"
   42    | "identifier" "assign" . "long"
   43    | "identifier" "assign" . "string_constant"

    "string_constant"  shift, and go to state 60
    "double"           shift, and go to state 61
    "long"             shift, and go to state 62


State 58

   17 function_def: "def" "identifier" @1 '(' arg_list ')' . $@2 '{' stmt_list optional_ret_stmt '}'

    $default  reduce using rule 16 ($@2)

    $@2  go to state 63


State 59

   37 arg_list: ne_arg_list ',' . arg
   39 ne_arg_list: ne_arg_list ',' . arg

    "identifier"  shift, and go to state 52

    arg  go to state 64


State 60

   43 arg: "identifier" "assign" "string_constant" .

    $default  reduce using rule 43 (arg)


State 61

   41 arg: "identifier" "assign" "double" .

    $default  reduce using rule 41 (arg)


State 62

   42 arg: "identifier" "assign" "long" .

    $default  reduce using rule 42 (arg)


State 63

   17 function_def: "def" "identifier" @1 '(' arg_list ')' $@2 . '{' stmt_list optional_ret_stmt '}'

    '{'  shift, and go to state 65


State 64

   37 arg_list: ne_arg_list ',' arg .
   39 ne_arg_list: ne_arg_list ',' arg .

    ','       reduce using rule 39 (ne_arg_list)
    $default  reduce using rule 37 (arg_list)


State 65

   17 function_def: "def" "identifier" @1 '(' arg_list ')' $@2 '{' . stmt_list optional_ret_stmt '}'

    "let"              shift, and go to state 5
    "def"              shift, and go to state 6
    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 8
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    $default  reduce using rule 4 (stmt_list)

    stmt_list     go to state 66
    ne_stmt_list  go to state 67
    stmt          go to state 68
    function_def  go to state 14
    assignment    go to state 15
    declaration   go to state 16
    exp           go to state 17


State 66

   17 function_def: "def" "identifier" @1 '(' arg_list ')' $@2 '{' stmt_list . optional_ret_stmt '}'

    "return"  shift, and go to state 69

    $default  reduce using rule 18 (optional_ret_stmt)

    optional_ret_stmt  go to state 70


State 67

    6 stmt_list: ne_stmt_list . stmt
    8 ne_stmt_list: ne_stmt_list . stmt

    "let"              shift, and go to state 5
    "def"              shift, and go to state 6
    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 8
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    stmt          go to state 71
    function_def  go to state 14
    assignment    go to state 15
    declaration   go to state 16
    exp           go to state 17


State 68

    5 stmt_list: stmt .
    7 ne_stmt_list: stmt .

    "return"  reduce using rule 5 (stmt_list)
    '}'       reduce using rule 5 (stmt_list)
    $default  reduce using rule 7 (ne_stmt_list)


State 69

   19 optional_ret_stmt: "return" . exp "stmt_sep"

    "-"                shift, and go to state 7
    "identifier"       shift, and go to state 20
    "string_constant"  shift, and go to state 9
    "double"           shift, and go to state 10
    "long"             shift, and go to state 11
    '('                shift, and go to state 12

    exp  go to state 72


State 70

   17 function_def: "def" "identifier" @1 '(' arg_list ')' $@2 '{' stmt_list optional_ret_stmt . '}'

    '}'  shift, and go to state 73


State 71

    6 stmt_list: ne_stmt_list stmt .
    8 ne_stmt_list: ne_stmt_list stmt .

    "return"  reduce using rule 6 (stmt_list)
    '}'       reduce using rule 6 (stmt_list)
    $default  reduce using rule 8 (ne_stmt_list)


State 72

   19 optional_ret_stmt: "return" exp . "stmt_sep"
   27 exp: exp . "+" exp
   28    | exp . "-" exp
   29    | exp . "*" exp
   30    | exp . "/" exp
   32    | exp . "^" exp

    "stmt_sep"  shift, and go to state 74
    "+"         shift, and go to state 30
    "-"         shift, and go to state 31
    "/"         shift, and go to state 32
    "*"         shift, and go to state 33
    "^"         shift, and go to state 34


State 73

   17 function_def: "def" "identifier" @1 '(' arg_list ')' $@2 '{' stmt_list optional_ret_stmt '}' .

    $default  reduce using rule 17 (function_def)


State 74

   19 optional_ret_stmt: "return" exp "stmt_sep" .

    $default  reduce using rule 19 (optional_ret_stmt)
